// Code generated by goctl. DO NOT EDIT!
// Source: demo.proto

package demo

import (
	"context"

	"go-zero-demo/app/demo/cmd/rpc/pb"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	AddReq     = pb.AddReq
	AddResp    = pb.AddResp
	DelReq     = pb.DelReq
	DelResp    = pb.DelResp
	ListReq    = pb.ListReq
	ListResp   = pb.ListResp
	Test       = pb.Test
	UpdateReq  = pb.UpdateReq
	UpdateResp = pb.UpdateResp

	Demo interface {
		List(ctx context.Context, in *ListReq, opts ...grpc.CallOption) (*ListResp, error)
		Add(ctx context.Context, in *AddReq, opts ...grpc.CallOption) (*AddResp, error)
		Updata(ctx context.Context, in *UpdateReq, opts ...grpc.CallOption) (*UpdateResp, error)
		Del(ctx context.Context, in *DelReq, opts ...grpc.CallOption) (*DelResp, error)
	}

	defaultDemo struct {
		cli zrpc.Client
	}
)

func NewDemo(cli zrpc.Client) Demo {
	return &defaultDemo{
		cli: cli,
	}
}

func (m *defaultDemo) List(ctx context.Context, in *ListReq, opts ...grpc.CallOption) (*ListResp, error) {
	client := pb.NewDemoClient(m.cli.Conn())
	return client.List(ctx, in, opts...)
}

func (m *defaultDemo) Add(ctx context.Context, in *AddReq, opts ...grpc.CallOption) (*AddResp, error) {
	client := pb.NewDemoClient(m.cli.Conn())
	return client.Add(ctx, in, opts...)
}

func (m *defaultDemo) Updata(ctx context.Context, in *UpdateReq, opts ...grpc.CallOption) (*UpdateResp, error) {
	client := pb.NewDemoClient(m.cli.Conn())
	return client.Updata(ctx, in, opts...)
}

func (m *defaultDemo) Del(ctx context.Context, in *DelReq, opts ...grpc.CallOption) (*DelResp, error) {
	client := pb.NewDemoClient(m.cli.Conn())
	return client.Del(ctx, in, opts...)
}
